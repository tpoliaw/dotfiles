export ZSH=~/.zsh

fpath+=${ZSH}/completions

autoload -Uz compinit
compinit

#########################################################
#              Key Bindings config                      #
#########################################################

# Use emacs bindings
bindkey -e

# Let all non-alphanum characters count as word breaks
export WORDCHARS=''

# Ctrl-delete opposite of ctrl-w
bindkey '^[[3;5~' delete-word
# Ctrl-bksp deletes word
bindkey '^H' backward-delete-word
# Match bash behaviour for deleting current - delete from cursor to start of line
# instead of deleting the whole line
bindkey '^U' backward-kill-line

# start typing + [Up-Arrow] - fuzzy find history forward
autoload -U up-line-or-beginning-search
zle -N up-line-or-beginning-search
bindkey '^[[A' up-line-or-beginning-search

# start typing + [Down-Arrow] - fuzzy find history backward
autoload -U down-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey '^[[B' down-line-or-beginning-search

# Run command and guess at next command to run
bindkey '^]' accept-and-infer-next-history

bindkey '^[[H' beginning-of-line # [Home] - Go to beginning of line
bindkey '^[[F' end-of-line        # [End] - Go to end of line

# Expand history for terms like !! and ^
bindkey ' ' magic-space

# Move by word with Ctrl-arrow
bindkey '^[[1;5C' forward-word   # [Ctrl-RightArrow] - move forward one word
bindkey '^[[1;5D' backward-word  # [Ctrl-LeftArrow] - move backward one word

# Cycle through completions
bindkey "${terminfo[kcbt]}" reverse-menu-complete # [Shift-tab] - move backwards through completions menu

# Make delete key work
bindkey '^[[3~' delete-char

# Copy previous argument with Ctrl-m
bindkey '^[m' copy-prev-shell-word

#########################################################
#                     Options                           #
#########################################################

# cd directory adds directory to dir stack
setopt auto_pushd
# but don't include duplicates
setopt pushd_ignore_dups
# Recognise comments on command line
setopt interactive_comments
# Don't replace history for each terminal
setopt append_history
# Append history when run, not when termial closes
setopt inc_append_history
# Include time data in history file
setopt extended_history
# Delete duplicated commands before others
setopt hist_expire_dups_first
# Don't add duplicate commands into history
setopt hist_ignore_dups
# Don't save commands starting with a space
setopt hist_ignore_space
# When expanding history, don't run without checking
setopt hist_verify
# Do not autoselect the first completion entry
unsetopt menu_complete
# Don't start/stop terminal with ctrl-s/q
unsetopt flow_control
# Use menu for selecting auto complete options
setopt auto_menu
# Run completion from cursor instead of end of word
setopt complete_in_word
# Move to the end of the word if an option is selected
setopt always_to_end

#########################################################
#                  ZSH Variables                        #
#########################################################

# Number of commands to retain in the shell's history
SAVEHIST=100000  # Number of commands to save
HISTSIZE=100000 # Maximum number of commands to save before deleting duplicates
# Where to save history
HISTFILE="${ZSH}/history"

#########################################################
#                Completion Options                     #
#########################################################

zstyle ':completion:*' completer _expand _complete _ignored _prefix
zstyle ':completion:*' completions 1
zstyle ':completion:*' expand prefix
zstyle ':completion:*' insert-unambiguous false
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more%s
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' menu select=1
zstyle ':completion:*' original true
zstyle ':completion:*' preserve-prefix '//[^/]##/'
zstyle ':completion:*' select-prompt %SScrolling active: current selection at%p%s
zstyle ':completion:*' squeeze-slashes true
zstyle ':completion:*' substitute 1
zstyle ':completion:*' verbose true

# Use caching so that completions of slow lookups are usable
zstyle ':completion::complete:*' use-cache 1
zstyle ':completion::complete:*' cache-path ${ZSH}/.cache

#########################################################
#                     Plugin Init                       #
#########################################################

# Generate new ~/.config/zr.zsh if it does not exist or if ~/.zshrc has been changed
if [[ ! -f ~/.cache/zr.zsh ]] || [[ ~/.zshrc -nt ~/.cache/zr.zsh ]]; then
  echo 'Refreshing plugin list'
  zr \
    junegunn/fzf.git/shell/key-bindings.zsh \
    junegunn/fzf.git/shell/completion.zsh \
    zsh-users/zsh-syntax-highlighting\
    Tarrasch/zsh-bd\
    mfaerevaag/wd\
    > ~/.cache/zr.zsh
fi

source ~/.cache/zr.zsh

# Configure fzf
export FZF_DEFAULT_OPTS='--height 40% --reverse --border'
export FZF_DEFAULT_COMMAND="fd --hidden -I --exclude='.git'"
export FZF_CTRL_T_COMMAND="fd --hidden -I --exclude='.git'"
export FZF_ALT_C_COMMAND="fd -td --hidden -I --exclude='.git'"
export FZF_COMPLETION_TRIGGER='##'
bindkey '^@' fzf-file-widget

if type atuin > /dev/null; then
    eval "$(atuin init zsh --disable-up-arrow)"
else
    echo "Install atuin"
fi

#########################################################
#                   Assorted functions                  #
#########################################################

COMMAND_HISTORY_FILE="${ZSH}/full_history"
function preexec {
    if [[ ${1:0:1} != ' ' ]]
    then
        echo "$(date +"%Y/%m/%d (%H:%M)") ${HOST}:$(tty |cut -c 6-) $(pwd -P): $1" >> $COMMAND_HISTORY_FILE;
    fi
}

#########################################################
#                     Prompt stuff                      #
#########################################################

# Change the default tab size to 4 spaces
tabs -4

# Show the time a command was run in the rprompt of the line
# but don't show in the current line.
# Set the rprompt to start with to show 24 hr time in the right prompt
export RPROMPT='%*'
# Before running each command, set the rprompt and reset the prompt
zle-line-finish() {
    export RPROMPT='%*'
    zle reset-prompt
}
zle -N zle-line-finish

#########################################################
#                'Normal' zshrc stuff                   #
#########################################################

if [[ -f ~/.zsh/aliases ]] {
    source ~/.zsh/aliases
}

# Rest of prompt config is in ~/.config/starship.toml
eval "$(starship init zsh)"
